@use 'sass:map';

@function get-real-vh($vh) {
  @return calc(var(--vh, 1vh) * #{$vh});
}

@function remsize($pixels) {
  @return calc((#{$pixels} / var(--gfs)) * 100rem);
}

@function clampSize($min, $max) {
  @return max(#{$min}px, #{vw($max)});
}

@function clampSizeRem($min, $max) {
  @return max(#{$min}px, #{remsize($max)});
}

@function vw($pixels) {
  @return calc(((#{$pixels} / var(--gfs)) * 100) * 1vw);
}

$breakpoints: (
  xl: 1920,
  blg: 1440,
  mlg: 1280,
  lg: 1024,
  md: 834,
  smd: 767,
  sm: 480,
) !default;

$media-direction: max !default;

@function getMediaSize($direction, $screen) {
  @if ($direction == min) {
    @return map.get($breakpoints, $screen) + 0.99;
  }

  @return map.get($breakpoints, $screen);
}

@mixin media($screen, $direction: max) {
  @media (#{$direction}-width: getMediaSize($direction,  $screen) + 'px') {
    @content;
  }
}

@mixin fontType($point) {
  @if $point==M {
    font-family: 'Montserrat', Arial, Helvetica, sans-serif;
  }
  @if $point==O {
    font-family: 'Oldtimer', Arial, Helvetica, sans-serif;
  }
}

@mixin fontSize($desktop, $tablet, $mobile) {
  @include media(
    (
      font-size: (
        all: clampSize($tablet, $desktop),
        md: #{remsize($tablet)},
        sm: $mobile,
      ),
    )
  );
}

@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }

  @media (hover: none) {
    &:active {
      @content;
    }
  }
}
